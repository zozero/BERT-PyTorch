from tqdm import tqdm

填充, 分类 = '[PAD]', '[CLS]'


def 构建数据集(配置):
    def 载入数据(路径, 句子长度=32):
        内容列表 = []
        with open(路径, 'r', encoding='UTF-8') as 文件:
            for 行 in tqdm(文件):
                一行 = 行.strip()
                if not 一行:
                    continue
                内容, 标签 = 一行.split('\t')
                # 由于我使用的是中文，以字为单位
                字符列表 = 配置.分词器.分词(内容)
                字符列表 = [分类] + 字符列表
                字符列表长度 = len(字符列表)
                掩码 = []
                字符标记列表 = 配置.分词器.把字符转换到标记(字符列表)

                if 句子长度:
                    if len(字符列表) < 句子长度:
                        掩码 = [1] * len(字符标记列表) + [0] * (句子长度 - len(字符列表))
                        字符标记列表 += ([0] * (句子长度 - len(字符列表)))
                    else:
                        掩码 = [1] * 句子长度
                        字符标记列表 = 字符标记列表[:句子长度]
                        字符列表长度 = 句子长度
                内容列表.append((字符标记列表, int(标签), 字符列表长度, 掩码))
        return 内容列表

    训练用数据集 = 载入数据(配置.训练_路径, 配置.句子长度)
    验证用数据集 = 载入数据(配置.验证_路径, 配置.句子长度)
    测试用数据集 = 载入数据(配置.测试_路径, 配置.句子长度)
    return 训练用数据集, 验证用数据集, 测试用数据集


class 数据集迭代器:
    def __init__(self):
        pass


def 构建迭代器(数据集, 配置):
    迭代器 = 数据集迭代器()
    return 迭代器
